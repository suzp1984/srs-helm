apiVersion: v1
kind: ConfigMap
metadata:
  name: configs
data:
  redis.conf: |
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile /var/run/redis/redis-server.pid
    loglevel notice
    databases 16
    always-show-logo yes
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data/redis
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-disable-tcp-nodelay no
    replica-priority 100
    lazyfree-lazy-eviction no
    lazyfree-lazy-expire no
    lazyfree-lazy-server-del no
    replica-lazy-flush no
    appendonly no
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    lua-time-limit 5000
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    latency-monitor-threshold 0
    notify-keyspace-events ""
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    hll-sparse-max-bytes 3000
    stream-node-max-bytes 4096
    stream-node-max-entries 100
    activerehashing yes
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    hz 10
    dynamic-hz yes
    aof-rewrite-incremental-fsync yes
    rdb-save-incremental-fsync yes
  srs.release.conf: |
    # !!! Important: SRS will restore this file during each restart, please never modify it.
    # The config for LigthHouse SRS.
    # See https://github.com/ossrs/srs/blob/develop/trunk/conf/full.conf

    listen              1935;
    max_connections     1000;
    # For docker, please use docker logs to manage the logs of SRS.
    # See https://docs.docker.com/config/containers/logging/
    srs_log_tank        console;
    daemon              off;
    disable_daemon_for_docker off;
    http_api {
        enabled         on;
        listen          1985;
        raw_api {
            enabled on;
            allow_reload on;
        }
    }
    http_server {
        enabled         on;
        listen          8080;
        dir             ./objs/nginx/html;
    }
    rtc_server {
        enabled on;
        listen 8000; # UDP port
        # @see https://github.com/ossrs/srs/wiki/v4_CN_WebRTC#config-candidate
        candidate $CANDIDATE;
        # Disable for Oryx.
        use_auto_detect_network_ip off;
        api_as_candidates off;
    }

    # See https://github.com/ossrs/srs/issues/1147
    srt_server {
        enabled on;
        listen 10080; # UDP port
        maxbw 1000000000;
        connect_timeout 4000;
        latency 20;
        peerlatency 20;
        recvlatency 20;
        # See https://ossrs.io/lts/en-us/docs/v6/doc/srt#high-quality-mode
        tlpktdrop off;
        tsbpdmode off;
    }

    # include containers/data/config/srs.server.conf;

    vhost __defaultVhost__ {
        http_remux {
            enabled     on;
            mount       [vhost]/[app]/[stream].flv;
        }
        rtc {
            enabled     on;
            nack on;
            twcc on;
            stun_timeout 30;
            dtls_role passive;
            # @see https://github.com/ossrs/srs/wiki/v4_CN_WebRTC#rtmp-to-rtc
            rtmp_to_rtc on;
            keep_bframe off;
            # @see https://github.com/ossrs/srs/wiki/v4_CN_WebRTC#rtc-to-rtmp
            rtc_to_rtmp on;
            pli_for_rtmp 6.0;
        }
        srt {
            enabled     on;
            srt_to_rtmp on;
        }

        # For backend server to verify client.
        http_hooks {
            enabled         on;
            on_publish      http://{{ .Values.service.oryxName }}:80/terraform/v1/hooks/srs/verify;
            on_unpublish    http://{{ .Values.service.oryxName }}:80/terraform/v1/hooks/srs/verify;
            on_play         http://{{ .Values.service.oryxName }}:80/terraform/v1/hooks/srs/verify;
            on_stop         http://{{ .Values.service.oryxName }}:80/terraform/v1/hooks/srs/verify;
            on_hls          http://{{ .Values.service.oryxName }}:80/terraform/v1/hooks/srs/hls;
        }

        include /data/srs/conf/srs.vhost.conf;
    }
  srs.vhost.conf: |
    # !!! Important: This file is produced and maintained by the Oryx, please never modify it.
    hls {
        enabled on;
        hls_fragment 10;
        hls_window 60;
        hls_aof_ratio 2.1;
        hls_path ./objs/nginx/html;
        hls_m3u8_file [app]/[stream].m3u8;
        hls_ts_file [app]/[stream]-[seq]-[timestamp].ts;
        hls_wait_keyframe on;
        hls_dispose 15;
    }
  srs.origin.conf: |
    listen              1935;
    max_connections     1000;
    pid                 objs/origin.pid;
    daemon              off;
    srs_log_tank        console;
    http_server {
        enabled         on;
        listen          8080;
        dir             ./objs/nginx/html;
    }
    http_api {
        enabled         on;
        listen          1985;
    }
    rtc_server {
        enabled on;
        listen 8000; # UDP port
        # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#config-candidate
        candidate $CANDIDATE;
    }
    srt_server {
        enabled on;
        listen 10080;
        tsbpdmode off;
        tlpktdrop off;
    }
    heartbeat {
        enabled on;
        interval 9;
        url http://{{ .Values.service.proxyName }}:{{ .Values.service.proxyApi }}/api/v1/srs/register;
        device_id origin;
        ports on;
    }
    vhost __defaultVhost__ {
        http_remux {
            enabled     on;
            mount       [vhost]/[app]/[stream].flv;
        }
        hls {
            enabled         on;
            hls_path        ./objs/nginx/html;
            hls_fragment    10;
            hls_window      60;
        }
        rtc {
            enabled     on;
            # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#rtmp-to-rtc
            rtmp_to_rtc on;
            # @see https://ossrs.net/lts/zh-cn/docs/v4/doc/webrtc#rtc-to-rtmp
            rtc_to_rtmp on;
        }
        srt {
            enabled on;
            srt_to_rtmp on;
        }
        # For backend server to verify client.
        http_hooks {
            enabled         on;
            on_publish      http://{{ .Values.service.oryxName }}:{{ .Values.service.http }}/terraform/v1/hooks/srs/verify;
            on_unpublish    http://{{ .Values.service.oryxName }}:{{ .Values.service.http }}/terraform/v1/hooks/srs/verify;
            on_play         http://{{ .Values.service.oryxName }}:{{ .Values.service.http }}/terraform/v1/hooks/srs/verify;
            on_stop         http://{{ .Values.service.oryxName }}:{{ .Values.service.http }}/terraform/v1/hooks/srs/verify;
            on_hls          http://{{ .Values.service.oryxName }}:{{ .Values.service.http }}/terraform/v1/hooks/srs/hls;
        }
    }



